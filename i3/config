### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l


set $term alacritty 
set $browser brave-browser
set $file-manager nemo
set $menu exec --no-startup-id ~/.config/rofi/scripts/launcher_t3
set $lock_bg  ~/.config/i3/lock-wall.jpg 
set $screen_bg ./wall.jpg
set $clipboard-manager diodon
set $power-menu exec --no-startup-id ~/.config/rofi/scripts/powermenu_t2 

include /etc/i3/config-vars.d/*

# Font, borders, and gaps
# General Settings
floating_modifier $mod
default_border pixel 1
gaps inner 5
gaps outer 5

smart_gaps on
hide_edge_borders smart

font pango:JetBrainsMono Nerd Font 9

# Colours
client.focused #ffffff #ffffff #000000 #fc2d2d
client.unfocused #000000 #000000 #ffffff
client.focused_inactive #000000 #000000 #ffffff

### Output configuration
#

# Add section for handling locking and sleeping





### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Open browser
    bindsym $mod+i exec $browser

    # Open File browser
    bindsym $mod+e exec $file-manager

    # Kill focused window
    bindsym $mod+c kill

    # Start your launcher
    bindsym $mod+d $menu

    # Start your clipboard 
    # bindsym $mod+Shift+v exec $clipboard-manager 
bindsym $mod+Shift+v exec --no-startup-id copyq menu
    # Add Power menu 
    bindsym $mod+x $power-menu 


    # Add screenshot capability
    bindsym Print exec flameshot screen -c
    bindsym Shift+Print exec flameshot gui -c

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.

    # Reload the configuration file
    bindsym $mod+Shift+c restart 

    # Exit i3 (logs you out of your i3 session)
    bindsym $mod+Shift+e exec i3 exit
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+t layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+Shift+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"



#media keys
    # Add volume control
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym $mod+m exec pactl set-sink-mute @DEFAULT_SINK@ toggle

    bindsym XF86AudioRaiseVolume exec pamixer -i 5 && \
    notify-send Volume -h int:value:$(pactl get-sink-volume @DEFAULT_SINK@ | awk '{print $5}')

    bindsym XF86AudioLowerVolume exec pamixer -d 5 && \
    notify-send Volume -h int:value:$(pactl get-sink-volume @DEFAULT_SINK@ | awk '{print $5}')
    # Add brigthness control
    bindsym XF86MonBrightnessUp exec brightnessctl s +5% && \
    notify-send Brightness -h int:value:$(brightnessctl | awk '/Current/ {print $4}' | tr -d '()')

    bindsym XF86MonBrightnessDown exec brightnessctl s 5%- && \
    notify-send Brightness -h int:value:$(brightnessctl | awk '/Current/ {print $4}' | tr -d '()')

    # Mic Toggle
    bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

## PowerMenu
#
# Status Bar:
#

# bar-dark
bar {
	position top
	status_command while ~/.config/i3/scripts/barstats; do sleep 1; done
	colors {
        	statusline #ffffff
        	background #000000
        	inactive_workspace #000000 #000000 #ffffff
		focused_workspace #ffffff #ffffff #000000
    }
}

# Rules
# for_window [app_id="float"] floating enable;
# for_window [app_id="org.kde.kdeconnect.daemon"] floating enable;
# for_window [title="File Operation Progress"] floating enable;
#floating for wifi-qr
# for_window [title="zbar barcode reader"] floating enable;
# for_window [app_id="zenity"] floating enable;
for_window [instance="copyq"] floating enable
for_window [instance="copyq"] resize set 1000 600
for_window [instance="copyq"] border pixel 5

# Autolaunch
exec_always --no-startup-id picom 
exec --no-startup-id nitrogen --restore
exec --no-startup-id kdeconnect-indicator
# exec --no-startup-id diodon
exec --no-startup-id flameshot 
exec --no-startup-id copyq
include /etc/i3/config.d/*
